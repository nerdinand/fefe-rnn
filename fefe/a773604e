[l] "Ach du Kacke"-Paper der Woche (braucht fuers Verstaendnis gute Kenntnisse von Rechnerarchitektur).CPUs fuehren Code spekulativ aus. Wenn man drei Instruktionen hat, und die sind unabhaengig von einander (das Ergebnis von Instruktion 1 ist nicht Eingabe von Instruktion 2), dann fuehrt die CPU moeglichst viele davon (wieviel die Hardware halt hergibt) parallel aus. Allerdings gibt es dann komplizierte Logik, um die Ergebnisse so zurecht zu pfriemeln, dass wenn Instruktion 1 fehlschlaegt, dass dann die "Ergebnis schreiben"-Phase von Instruktion 2 nicht ausgefuehrt wird.Allerdings kann schon die Lesephase Seiteneffekte ausloesen, z.B. welche Daten im Cache sind und welche nicht.Die Frage in dem Paper war, ob er es so irgendwie schaffen kann, durch eine Race Condition in der spekulativen Ausfuehrung in der CPU und der Interaktion mit TLBs und Caches vom User Space aus Kernel-Speicher zu lesen.Das hat er nicht geschafft.Aber ein guetes Gefuehl bleibt trotzdem nicht zurueck.
