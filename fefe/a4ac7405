[l] Bei dem Meltdown-Bug ist mir gerade was aufgefallen, das ich mal mit euch teilen will.Und zwar hat Intel seit Jahren in ihrem Prozessoren "Hyperthreading", deren Markennamen fuer eine Technik namens Simultaneous Multithreading (SMT). Bei Intel bringt das so 20% Mehrleistung, wenn man einen zweiten Thread startet und der auf dem virtuellen Core laeuft. Kommt natuerlich immer auf den Code an, klar.AMD hat seit Ryzen auch SMT, aber bei denen bringt das 40%. Ich habe mich die ganze Zeit gefragt, wieso. Jetzt glaube ich, die Erklaerung zu haben.Und zwar hat Intel ja, wie wir jetzt wissen, bei ihrer spekulativen Ausfuehrung von Instruktionen beschissen, und hat den Load vor den Zugriffscheck vorgezogen. Der Load wird schon gemacht, wenn die CPU sich noch nicht sicher ist, ob der Load erlaubt sein wird (die Pruefung davon kostet auch Zeit). Wenn Intel dann feststellt, dass der Load nicht erlaubt war, ist es nicht schlimm, wenn die Daten in den Cache geladen wurden, denkt sich Intel. Und das lief auch jahrelang prima, bis jemandem auffiel, dass das ein Sicherheitsproblem ist.So, nehmen wir mal an, Intel haette nicht auf diese Art fuer Benchmarks beschissen. Was waere der Effekt gewesen? Die Latenz fuer die Load-Instruktionen waere hoch gegangen. Und was macht die CPU, wenn gerade irgendwas haengt (weil die Latenz zu hoch ist)? Sie fuehrt per SMT einen anderen Thread aus. Das ist die Idee von SMT.Was, so frage ich mich gerade, wenn die 20% mehr SMT-Performance bei AMD genau die 20% sind, die Intel hier durch Senken der Sicherheit rausgeschummelt hat? AMD hat einfach ehrlich gestallt in den Faellen. Und das geht jetzt dank SMT nicht mehr verloren.Ich fuehlte mich spontan an Dieselgate erinnert. :-)
