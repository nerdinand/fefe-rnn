[l] Ich habe gerade mal auf openssh 7.1 updaten wollen. Ich baue solch wichtige Komponenten immer mit dietlibc, damit ich zur Not auch bei zerschossener glibc-Installation noch auf das System komme und das reparieren kann. Das ist immer ein bisschen zickig, openssh zur Zusammenarbeit zu ueberreden, aber ich habe da einen alten Patch fuer, der configure halt mit den richtigen Parametern aufruft und dann das Ergebnis repariert (auch gegen -lcompat linken und HAVE_UTIMES manuell setzen). Der Patch funktionierte auch noch, openssh 7.1 baute damit, der Client funktionierte auch, der Server startete, aber ich konnte mich darueber nicht mehr einloggen. Der Server verstarb immer irgendwo im Login-Prozess.Das Problem war, dass dietlibc einige OpenBSD-APIs implementiert, konkret arc4random und getentropy, genau damit OpenSSH das verwenden kann und in den Genuss des neuen getrandom-Syscalls unter Linux kommt. Das configure-Skript erkennt das auch und benutzt dann meine dietlibc-Implementationen. Die glibc hat diese APIs nicht. Der OpenSSH-Server hat einen "sandbox"-Modus fuer Privilege Separation, in dem er SECCOMP-Filter benutzt, um die erlaubten Syscalls zu filtern. Und dort war nun ausgerechnet der getrandom-Syscall noch nicht freigegeben, weil der Code fuer den glibc-Port das nicht benutzte.Manchmal kann es eben auch Nachteile haben, wenn man Leuten zu sehr entgegen kommt :-)
