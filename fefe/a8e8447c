[l] Ich hatte noch eine inhaltlich weiterbringende Einsendung zu Kommunikationsproblemen zwischen Nerds und anderen Nerds (denn nicht nur Nerds und Nicht-Nerds haben Probleme, auch Nerds untereinander).Infrastruktur wird ueberhaupt nur beurteilt, wenn sie versagt - ansonsten wird sie gar nicht wahrgenommen. Der Linux-Kernel wird an "ReiserFS/btrfs/XFS/ext4 hat meine Daten gefressen" und an "Der Kernel cored, wenn die Kiste aus dem Sleep aufwacht" gemessen und nicht an "Oh, der write(2) System Call hat meine Daten tatsaechlich auf die Platte geschrieben.Das ist ein grosser Unterschied zu Libreoffice, das keine Infrastruktur ist und an neuen Best Cases (= neue Features) statt an seinen Worst Cases gemessen zu werden.Infrastrukturentwickler verwenden also dieselben Sprachen, Tools, Unit-Tests, VCVSe und dergleichen mehr, arbeiten aber unter einem komplett anderen Wertesystem.Wenn da einer auf der LKML ankommt und zeigt "Hier, neuer shiny code" (= neuer Best Case), dann wissen die schon, dass der aus einem anderen, falschen Universum ist. Infrastrukturentwickler wissen, dass Code auch immer Bugs/LoC hat, also eine Liability und kein Asset ist. Das kann man natuerlich versuchen, solchen Personen immer wieder, und wieder, und wieder zu erklaeren, aber das kostet mehr Energie als es wert ist.Man will in einer Infrastruktur auch nicht mehr Leute haben. Wenn wenn man da einmal genug Teilnehmer hat, dass das Projekt laeuft, dann sind mehr Leute auch kein Asset, sondern eine Liability - und das gilt nicht nur fuer die LKML-Regulars oder Kernel-Committer, oder glibc-Developer, sondern auch fuer Leute, die Deine Gasleitungen oder Stromkabel warten, und sogar fuer Wikipedia Admins (sic!). Das ist ein ganz besonderer Menschenschlag, mit einer besonderen Arbeitsethik, die vollstaendig daraus stammt, dass die ihre Arbeit dann gut machen, wenn sie ihnen nicht gedankt wird und sie einfach niemand bemerkt.Infrastrukturprojekte wollen nicht nur Deinen Code nicht, sondern auch Deine Mitarbeit nicht, weil sie - ausreichend Basis-Masse vorausgesetzt - beides nicht brauchen. Insbesondere koennen sie Dich nicht brauchen, wenn Du nicht diesen Infrastruktur-Mindset hast, weil Du sonst auch die Kritik und die Arbeitssituation unter einer Fail-Metrik wie sie bei Infrastuktur herrscht nicht aushaeltst.Wenn man da als shiny bling bling Feature-Developer hin kommt, oder als eine 'Findet mich und meine Anliegen wichtig'-SJW-Mentalitaet, dann passiert eine Sarah Sharp.Ich stimme dem im Detail nicht zu (ich bewerte den Kernel auch nach neuen Features und Performancegewinnen bei alten Features), aber das kann man auch durch geschickte Wortauslegung wegdefinieren. Die Ausfuehrungen finde ich trotzdem weiterhelfend und konnte das so auch schon beobachten. Bei so langen Statements erwaehne ich haeufig den Einsender nicht, aber in diesem Fall linke ich mal auf ein vergleichbares Statement von ihm, denn Kris macht das seit vielen, vielen Jahren und weiss, wovon er spricht. Das Verstaendnis der verschiedenen Herangehensweisen von Infrastruktur-Kram und Feature-Kram ist wichtig und es kann uns allen nur hilfreich sein, wenn wir es uns immer mal wieder vor Augen fuehren.
