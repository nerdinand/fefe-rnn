[l] Ein Hinweis noch zu Softwareentwicklung (siehe auch). Ich bin da wahrscheinlich voreingenommen, weil ich Software entwickle. Dennoch.Mein Eindruck ist, dass Softwareentwicklung in der Industrie immer mehr als Randdetail betrachtet wird. Die Werbung pruegelt da ja auch immer in die selbe Richtung. "Mit diesem Produkt wird alles NOCH VIEL EINFACHER!" Da kann man dem Management schon nachsehen, wenn die glauben, das sei alles total einfach. So viele Evolutionsspruenge in Richtung "jetzt NOCH EINFACHER!1!!" wie wir schon gemacht haben. Und es stimmt ja auch. Damals unter DOS hatten wir keinen Speicherschutz und mussten Swapping selber implementieren! Damals unter C, wenn wir da einen Zeiger verlegt haben, dann gab es Speicherkorruption! Damals in den Schuetzengraeben, wenn wir da einen Datenblock freizugeben vergassen, dann leakte der Speicher!! Kann man sich heute gar nicht mehr vorstellen!1!!Scherz beiseite: Heutzutage liegt der Fokus bei Leuten, die ueber die Entwicklung von Software reden, haeufig auf Management-Dingen. Sowas wie Extreme Programming. In der Ausbildung (der Hinweis kam gerade per Mail rein, und ich gebe das gerne weiter) wird der Eindruck erweckt, man klickt sich in seinem UML-Tool ein Flowchart zusammen, und dann ist die Software fertig. Das tatsaechliche Hinschreiben ist dann ein niederer Akt, den kann man ja auch einer Outsourcing-Firma in Indien ueberlassen.Dieser Ansatz ist bei Software genau so falsch wie bei allen anderen Dingen. Ganze Industriezweige haben sich inzwischen dem Management und der Qualitaetskontrolle von per Outsourcing hergestellten Produkten verschrieben. Der Westen macht ueberhaupt nur noch Management und Qualitaetskontrolle, die Produkte machen die Billiglohnlaender. Bei Software ist das noch nicht so, aber wenn man sich Fachzeitschriften durchliest, koennte man den Eindruck gewinnen.Ich sehe das so: Der Code ist am Ende das Produkt. Nicht der Plan fuer den Code. Nicht die Broschueren. Nicht die Meetings. Der Code.Die Kern-Sorge in der Softwareentwicklung sollte daher auch der Code sein.Die Massstaebe sollten wie in anderen Ingenieursdisziplinen auch sein. Elektriker legen Kabel ja auch nicht wild in der Gegend herum. Wenn ihr mal bei einem Auto die Motorhaube aufmacht, dann kommt euch ja auch kein Kabelsalat entgegengequollen. Das ist alles so ausgelegt, dass man es schnell und unkompliziert warten kann. Bei Code sollte man das auch so tun.Dementsprechend ist Code auch nicht fertig, wenn die Funktionalitaet da ist. Das ist nur der erste Prototyp. Code ist fertig, wenn niemandem im Team ein Weg einfaellt, irgendetwas daran besser zu machen.Übrigens, nochmal als Nachschlag zu dem anderen Softwareentwicklungs-Artikel. Wenn ihr ein System optimieren wollt, dann empfehle ich, da mit der Frage heranzugehen: Wie kriege ich das mindestens doppelt so schnell? Gar nicht mit Klein-Klein aufhalten. Guckt euch das System an. Legt euch den Gedanken zurecht, dass die Konkurrenz das selbe Problem auf der selben Hardware in der halben Zeit loest, und ihr muesst das jetzt besser als die machen. Die groesste Huerde beim Bessermachen ist, dass die Leute sich selbst einreden, das sei schon alles gut genug, oder es sei zu riskant, da jetzt fuer inkrementelle Verbesserungen den Code anzufassen. Wenn man wirklich was erreichen will, muss man da mental diesen Holzklotz aus dem Weg raeumen, der einem sagt, soooo viel besser geht das gar nicht, dass sich jetzt der Aufwand lohnen wuerde. Zu der Feststellung kann man immer noch kommen. Aber das sollte am Ende der Überlegungen stehen, nicht am Anfang.Update: Jetzt gehen hier diverse Mails ein, dass Elektriker ja inzwischen auch pfuschen, und dass Autos inzwischen so gebaut werden, dass sie eben nicht mehr wartbar sind, sondern man nur noch ganze Komponenten austauscht, und das auch nur geht, wenn man Spezialwerkzeug hat, das man nicht frei kaufen kann, sondern dass die nur an ihre Lizenzwerkstaetten vergeben. Ja, weiss ich. Hatte gerade kein besseres Beispiel zur Hand. Nehmt es also als Verweis auf die guten alten Zeiten, wie sie frueher mal waren, als alles besser war. Seufz.
