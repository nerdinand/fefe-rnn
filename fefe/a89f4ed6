[l] Tsja, jetzt wissen wir, was an Let's Encrypt so lange gedauert hat. Der Haufen raeudige Python-Scheisse, den die da auf teilnehmenden Zielsystemen auf die Festplatte kacken wollen.Ich weiss ja nicht, wie es euch geht, aber ich kriege Ausschlag, wenn ich selbstdenkende, selbstreparierende, selbstupdatende Software sehe. Ich habe noch nie erlebt, dass das nicht am Ende mehr Ärger macht, als wenn sie einfach gesagt haetten: diese drei Schritte muessen getan werden.Ich meine, seien wir doch mal ehrlich hier. Die Leute schaffen es bisher auch, sich SSL-Zertifikate zu beschaffen. Es gibt da etablierte Prozesse, mit denen kommen die Leute klar, und die funktionieren auch. Aber nneeeeiiiiinnn, die Herren Startupklitschen-Vollpfosten brauchen ein selbstdenkendes Python-Environment. Nein, liebe Letsencrypt-Leute, ich werde mir GANZ SICHER NICHT auf meinem Webserver Python installieren, damit ich ein SSL-Zertifikat beantragen kann. Das wird nicht passieren. Nicht in diesem Universum auch auch nicht in irgendeinem anderen.Diese Wartungsarbeiterzeugungshooligans bieten allen Ernstes einen Weg an, bei dem man sich eine VM oder ein Docker-Image installiert, damit darin ihre gammelige Stinksoftware laufen kann, die dann das Zertifikat beantragt. Geht's noch?!Die STIRN, die man als so ein Projekt haben muss, um den Leuten zu erzaehlen, sie sollen bitte "diesen Code hier nehmen und ausfuehren"! WTF? Ich habe hier Risikominimierung betrieben und die Trusted Computing Base minimiert und jetzt schiesse ich mir das alles weg und verdreifache den Footprint des Webservers, um ein SSL-Zert installieren zu koennen? Was fuer Leute denken sich denn bitte sowas aus?!Unfassbar.Ich weiss ja nicht, ob ihr euch mal angeguckt habt, wie das laufen soll. Aus "Vereinfachungsgruenden" stellen die sich vor, dass ich da in meinem Webserver einen Webdienst laufen lasse, der dann aus dem Internet erreichbar sein soll — also mit anderen Worten meine Angriffsoberflaeche verdutzendfache! —, und deren Dienst meldet sich dann periodisch bei diesem Webservice und dann updated irgendein Automatismus die Zertifikate. Ja nee, wird nicht passieren. Ganz sicher nicht. Man stelle sich mal vor, Microsoft wuerde das so machen. Klar koennen Sie SSL haben, aber dafuer muessen Sie diese Backdoor, aeh, diesen Service in ihrem IIS freischalten! Und dann meldet sich das Mutterschiff bei Ihnen und richtet das alles ein!1!! Da waere doch hier die Hoelle los!Ja nee, letsencrypt, so wird das nichts.Sie bieten wohl auch einen Modus an, der keinen Webservice braucht. Aber den kann ich hier gerade nicht testen, denn"sudo" is not available, will use "su" for installation steps…grep: /etc/os-release: No such file or directorySorry, I don't know how to bootstrap Let's Encrypt on your operating system!You will need to bootstrap, configure virtualenv, and run a pip install manuallyPlease see https://letsencrypt.readthedocs.org/en/latest/contributing.html#prerequisitesfor more infoCreating virtual environment…./letsencrypt-auto: line 166: virtualenv: command not foundMit welcher Chutzpe diese ganzen Startupklitschenwebdesigner immer glauben, sie koennten ihre ganze Hipsterscheisse weltweit ueberall voraussetzen!Und nein, ich werde mir ganz sicher nicht Docker installieren. Ihr koennt mal alle gepflegt kacken gehen.Update: Hier hat das mal jemand als statische Webseite implementiert. Ich habe das noch nicht ausprobiert, aber so stelle ich mir das vor.Update: Weil mir jetzt einige unterstellen, ich moechte da lieber was in C mit dietlibc haben: Nein, will ich nicht. Ich will da am liebsten gar keinem zusaetzlichen Code vertrauen muessen. Schon gar nicht Code anderer Leute. CAs koennen mir im Moment Zertifikate ausstellen, ohne dass ich irgendwelchem zusaetzlichen Code vertrauen muss. Ich sehe keinerlei Grund, wieso sich das jetzt aendern sollte.
