[l] Erinnert ihr euch an den Blogpost ueber das C++-Memory-Leak-Problem?Da hat sich der Plot nochmal weiterentwickelt. Erstens habe ich eine Mail von einem Redhat-Ingenieur gekriegt, der anscheinend an der Stelle zustaendig ist. Der hat sich erstmal ueber mein "Hipster-Bullshitbingo-Startup-Klitsche" totgelacht (ein Ami, wohlgemerkt), und dann gemeint, dieser Allokator sei ja seit vielen Jahre gar nicht mehr standardmaessig aktiv, und im Übrigen gebe der den Speicher ja schon frei, aber halt nicht ans Betriebssystem.OK, also das mit dem Betriebssystem hatte ich auch so verstanden, und ich glaube auch ihr hattet das so verstanden, aber wenn der nicht standardmaessig aktiv ist, wie kann dann dieser urspruengliche Blogpost behaupten, wenn er die magische Environment-Variable setzt, dass das Problem dann weg geht? Und ich hatte auch ein-zwei Leserzuschriften gekriegt, die bei ihren laenger laufenden C++-Projekten die Environment-Variable gesetzt hatten, und der Speicherbedarf ging runter. Wat?Ich klicke also nochmal auf den urspruenglichen Link und finde da ein Update vor, am Ende.The plot thickens. I've received several messages from people claiming the likely problematic C++ allocator, known as mt_alloc, hasn't been the default for a very long time and isn't in CentOS 7. To investigate I tried doing a string search of all binaries in /lib, /usr/lib, /lib64, etc., for "GLIBCPP_FORCE_NEW" and "GLIBCXX_FORCE_NEW" and variations thereof and… came up empty.Yet setting this environment variable makes the problem go away. I repeated the test and confirmed. Then I tried stupid things like setting "GLIBCXX_FARCE_NOO" and no, the problem remains.Hahaha, lolwut?! Welcome to the Twilight Zone!Da sieht man mal wieder: Software Engineering is hard.Aber auf jeden Fall ist es mir natuerlich eine besondere Freude, dass auch der Typ sich explizit ueber "Hipster-Bullshitbingo-Startup-Klitsche" amuesiert hat. :-)
