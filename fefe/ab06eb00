[l] Dan Bernstein erzaehlt ja seit ein paar Jahren, dass wir mal bei elliptischen Kurven (eines der letzten halbwegs stabil stehenden Fundamente moderne Public-Key-Kryptographie) aufpassen sollen, dass wir Kurven nehmen, bei denen man die Operationen nicht versehentlich verkacken kann. Da geht es um mehrere Dinge, die verkackt werden koennen. Erstens kann die Kurve selbst schon schlecht sein, also im Sinne von "da gibt es Abkuerzungen beim Cracken von Keys, wenn man das Geheimnis kennt, dass die Spezifizierer der Kurve da heimlich eingebacken haben". Aber ich spiele jetzt auf etwas anderes an. Am besten guckt ihr euch die Folien oder das Video selber mal an.Jedenfalls gab es da Kritik. Wie so haeufig, wir hatten ja bei C aehnliche Vorschlaege. "Hey, wenn wir dieses API hier besser machen, dann werden wir weniger Bugs haben". Und da kommen dann so Old Farts aus dem Unterholz und sagen "ihr infantilisiert C-Entwickler, die sind nicht so doof wie ihr sie hier darstellt". Aber am Ende des Tages geben die Nummern dem eben Recht, lieber die Umgebung schon so zu machen, dass es leichter ist, alles richtig zu machen.Ich erwaehne das hier alles, weil sich rausstellt, dass djb natuerlich mal wieder voellig Recht hatte. Natuerlich gibt es Leute, die bei komplizierter Materie das falsch machen. Ich zitiere mal:We evaluated 8 crypto libraries and their vulnerabilities to invalid curve attacks. We found out that the Bouncy Castle library and the Oracle JCE provider were vulnerable and we could extract private keys from the TLS servers running these libraries. The attacks are quite powerful. For Bouncy Castle, we needed about 3300 real server queries. For Oracle JCE, we needed about 17000 real server queries. We tested with the NIST-256 curve. The high number of requests needed for the Java servers results from a strange behaviour (bug?) in the Java EC computation.Ich koennte jetzt ein paar Worte fallen lassen ueber Java und die ganzen Java-Apologeten, die mir seit Jahren Mails schreiben, dass mit Java alles besser ist als mit C. Aber ich lehne mich glaube ich lieber zurueck und sage: Told you so. :-)Dass wir uns da richtig verstehen: Wer mit Java ECC-Krypto gemacht hat, der muss jetzt neue Keys generieren. Und natuerlich gucken, dass er eine gefixte Library irgendwo her kriegt. Aber hey, Oracle fixt ja schnâ€¦ never mind.
