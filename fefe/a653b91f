[l] Es gibt bei manchen CPUs eine mythische "NSA-Instruktion" namens Population Count. Es geht darum, die Bits in einem Bitstring zu zaehlen. Die Genesis-Story dahinter ist, dass man das beim DES-Cracking braucht, und daher die NSA bei Cray damals Druck gemacht haben soll, um eine Instruktion dafuer zu kriegen. Moderne Intel-CPUs haben auch eine Instruktion dafuer.Ich habe vorhin diese Webseite gefunden, die ein Stueck Code hat, das Popcount von Hand macht, und damit schneller ist als die dedizierte Instruktion.Das ist erstaunlicherweise nicht das erste Mal, dass CPU-Bauern sowas passiert. Aber gerade bei Popcount wundert es mich, weil da die Begruendung fuer die dedizierte Instruktion Performance war.Schon merkwuerdig, dass sowas immer wieder mal vorkommt.Ein anderes bekanntes Beispiel ist die Loop-Instruktion bei x86, die aus historischen Gruenden langsamer ist als wenn man von Hand ein Register runterzaehlt und einen Conditional Jump macht. AMD hat die Instruktion zu K5-Zeiten mal ordentlich implementiert, und ploetzlich platzten auf ihren CPUs alle moeglichen Turbo-Pascal-Programme, weil deren Runtime eine Schleife mit der Loop-Instruktion benutzt hat, um ihre Millisekunden-Warten-Funktion zu kalibrieren. Und das ergab dann eine Division durch Null oder sowas, weil AMD zu schnell war.Es gibt bei modernen CPUs immer wieder solche lustigen Geschichten an irgendwelchen staubigen Ecken :-)Update: Ich sollte dazu sagen, dass das nicht nur fuer die NSA wichtig ist. Popcount kann man auch beim Videocoding brauchen, fuer die Hammingdistanz (relevant fuer Kodierungsverfahren), und sogar fuer Biometrie und Computerschach. Der Hauptgrund, wieso die neuen Verfahren flotter sind, ist weil die auf breiteren Vektoren arbeiten koennen.
